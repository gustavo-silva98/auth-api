name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov ruff safety bandit
    
    - name: Run tests
      env:
        DB_URL: postgresql+asyncpg://test:test@localhost:5432/test
      run: |
        pytest --cov -v

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        
    - name: Lint with Ruff
      run: |
        ruff check .

    - name: Security checks
      run: |
        safety check -r requirements.txt
        bandit -r
        
    - name: Run Docker container smoke test
      run: |
          docker run -d -p 8000:8000 --name test-container your-app-name
          sleep 10 # Wait for app to start
          curl --fail http://localhost:8000/health
          docker stop test-container 
          dockerm rm test-container   
